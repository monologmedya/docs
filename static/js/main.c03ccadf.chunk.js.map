{"version":3,"sources":["context.ts","assets/logo.png","components/Navbar.tsx","components/Swagger.tsx","components/App.tsx","index.tsx"],"names":["defaultGlobalContext","apiDescriptionUrl","setDescriptionUrl","GlobalContext","createContext","Navbar","useContext","h","shrink","px","alignItems","bg","w","spacing","pl","href","process","src","logo","justifyContent","SpecUrlInput","useState","value","setValue","flex","appearance","placeholder","rounded","onKeyUp","e","key","onChange","currentTarget","onClick","Swagger","overflowY","router","title","description","icon","App","URL","document","location","searchParams","get","_value","trim","nextUrl","window","history","pushState","undefined","setTimeout","setGlobalState","globalState","Provider","id","ReactDOM","render","StrictMode","getElementById"],"mappings":"8KAOaA,EAA2C,CACtDC,kBAAmB,GACnBC,kBAAmB,cAGRC,EAAgBC,wBAAkCJ,GCZhD,MAA0B,iC,OCK5BK,EAAS,WACpB,IAAQJ,EAAsBK,qBAAWH,GAAjCF,kBAER,OACE,mCACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAMM,EAAE,MAAMC,OAAQ,EAAGC,GAAI,EAAGC,WAAW,SAASC,GAAG,cAAvD,UACE,cAAC,IAAD,CAAQC,EAAE,MAAMF,WAAW,SAASG,QAAS,EAAGC,GAAI,GAApD,SACE,cAAC,IAAD,CAAMC,KAAI,UAAKC,QAAL,kBAAqCf,GAA/C,SACE,cAAC,IAAD,CAAOgB,IAAKC,EAAMX,EAAG,QAIzB,cAAC,IAAD,CAAMK,EAAE,MAAMO,eAAe,SAA7B,SACE,cAAC,EAAD,cAQNC,EAAe,WACnB,MAAiDd,qBAAWH,GAApDF,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,kBAC3B,EAA0BmB,mBAASpB,GAAnC,mBAAOqB,EAAP,KAAcC,EAAd,KAEA,OACE,eAAC,IAAD,CAAQV,QAAS,EAAGW,KAAM,EAA1B,UACE,cAAC,IAAD,CACEC,WAAW,UACXC,YAAY,gCACZF,KAAM,EACNb,GAAG,aACHgB,SAAO,EACPL,MAAOA,EACPM,QAAS,SAAAC,GACO,UAAVA,EAAEC,KACJ5B,EAAkBoB,IAGtBS,SAAU,SAAAF,GACRN,EAASM,EAAEG,cAAcV,UAI7B,cAAC,IAAD,CAAQW,QAAS,kBAAM/B,EAAkBoB,IAAzC,sB,iBC5COY,EAAU,WACrB,IAAQjC,EAAsBK,qBAAWH,GAAjCF,kBAER,OACE,cAAC,IAAD,CAAKuB,KAAM,EAAGW,UAAU,SAAxB,SACGlC,EACC,cAAC,IAAD,CAAKA,kBAAmBA,EAAmBmC,OAAO,SAElD,cAAC,IAAD,CACEC,MAAM,iBACNC,YAAY,kDACZC,KAAK,mBCuBAC,MAlCf,WACE,MAAsCnB,mBAA6B,CACjEpB,kBAAmB,IAAIwC,IAAIC,SAASC,SAAS5B,MAAM6B,aAAaC,IAAI,SAAW,GAC/E3C,kBAAmB,SAAA4C,GACjB,IAAMxB,EAAQwB,EAAOC,QAAU,GAE3BC,EAAU,IACV1B,GAAmB,KAAVA,IACX0B,EAAO,gBAAY1B,IAGrB2B,OAAOC,QAAQC,eAAUC,EAAW,GAAIJ,GAExCK,YAAW,WACTC,EAAe,2BACVC,GADS,IAEZtD,kBAAmBqB,OAEpB,MAjBP,mBAAOiC,EAAP,KAAoBD,EAApB,KAqBA,OACE,cAAC,IAAD,UACE,cAACnD,EAAcqD,SAAf,CAAwBlC,MAAOiC,EAA/B,SACE,sBAAKE,GAAG,UAAR,UACE,cAAC,EAAD,IACA,cAAC,EAAD,YC1BVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,U","file":"static/js/main.c03ccadf.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport type GlobalContextProps = {\n  apiDescriptionUrl: string;\n  setDescriptionUrl: (value: string) => void;\n};\n\nexport const defaultGlobalContext: GlobalContextProps = {\n  apiDescriptionUrl: '',\n  setDescriptionUrl: () => {},\n};\n\nexport const GlobalContext = createContext<GlobalContextProps>(defaultGlobalContext);\n","export default __webpack_public_path__ + \"static/media/logo.4e4c129a.png\";","import { useContext, useState } from 'react';\nimport { Button, Flex, HStack, Image, Input, InvertTheme, Link } from '@stoplight/mosaic';\nimport { GlobalContext } from '../context';\nimport logo from '../assets/logo.png'\n\nexport const Navbar = () => {\n  const { apiDescriptionUrl } = useContext(GlobalContext);\n\n  return (\n    <>\n      <InvertTheme>\n        <Flex h=\"2xl\" shrink={0} px={5} alignItems=\"center\" bg=\"canvas-pure\">\n          <HStack w=\"1/3\" alignItems=\"center\" spacing={4} pl={12}>\n            <Link href={`${process.env.PUBLIC_URL}/?spec=${apiDescriptionUrl}`}>\n              <Image src={logo} h={6} />\n            </Link>\n          </HStack>\n\n          <Flex w=\"1/3\" justifyContent=\"center\">\n            <SpecUrlInput />\n          </Flex>\n        </Flex>\n      </InvertTheme>\n    </>\n  );\n};\n\nconst SpecUrlInput = () => {\n  const { apiDescriptionUrl, setDescriptionUrl } = useContext(GlobalContext);\n  const [value, setValue] = useState(apiDescriptionUrl);\n\n  return (\n    <HStack spacing={2} flex={1}>\n      <Input\n        appearance=\"minimal\"\n        placeholder=\"URL to an OpenAPI document...\"\n        flex={1}\n        bg=\"canvas-100\"\n        rounded\n        value={value}\n        onKeyUp={e => {\n          if (e.key === 'Enter') {\n            setDescriptionUrl(value);\n          }\n        }}\n        onChange={e => {\n          setValue(e.currentTarget.value);\n        }}\n      />\n\n      <Button onClick={() => setDescriptionUrl(value)}>Load</Button>\n    </HStack>\n  );\n};\n","import { useContext } from 'react';\nimport { API } from '@stoplight/elements';\nimport { NonIdealState } from '@stoplight/elements-core';\nimport { Box } from '@stoplight/mosaic';\nimport { GlobalContext } from '../context';\n\nexport const Swagger = () => {\n  const { apiDescriptionUrl } = useContext(GlobalContext);\n\n  return (\n    <Box flex={1} overflowY=\"hidden\">\n      {apiDescriptionUrl ? (\n        <API apiDescriptionUrl={apiDescriptionUrl} router=\"hash\" />\n      ) : (\n        <NonIdealState\n          title=\"Empty Document\"\n          description=\"Load OpenAPI definitions to view documentation.\"\n          icon=\"info-circle\"\n        />\n      )}\n    </Box>\n  );\n};\n","import { useState } from 'react';\nimport { Provider as MosaicProvider } from '@stoplight/mosaic';\nimport { GlobalContext, GlobalContextProps } from '../context';\nimport { Navbar } from './Navbar';\nimport { Swagger } from './Swagger';\n\nfunction App() {\n  const [globalState, setGlobalState] = useState<GlobalContextProps>({\n    apiDescriptionUrl: new URL(document.location.href).searchParams.get('spec') || '',\n    setDescriptionUrl: _value => {\n      const value = _value.trim() || '';\n\n      let nextUrl = '/';\n      if (value && value !== '') {\n        nextUrl = `?spec=${value}`;\n      }\n\n      window.history.pushState(undefined, '', nextUrl);\n\n      setTimeout(() => {\n        setGlobalState({\n          ...globalState,\n          apiDescriptionUrl: value,\n        });\n      }, 0);\n    },\n  });\n\n  return (\n    <MosaicProvider>\n      <GlobalContext.Provider value={globalState}>\n        <div id=\"wrapper\">\n          <Navbar />\n          <Swagger />\n        </div>\n      </GlobalContext.Provider>\n    </MosaicProvider>\n  );\n}\n\nexport default App;\n","import '@stoplight/elements/styles.min.css';\nimport './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}